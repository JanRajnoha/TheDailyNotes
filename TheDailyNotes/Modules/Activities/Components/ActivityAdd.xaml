<UserControl x:Class="TheDailyNotes.Modules.Activities.Components.ActivityAdd"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="using:TheDailyNotes.Components"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:CusSet="using:CustomSettingsDLL"
             xmlns:Convert="using:Framework.Classes"
             xmlns:TDNConvert="using:TheDailyNotes.Classes"
             xmlns:FControl="using:Framework.Controls"
             xmlns:Conv="using:Template10.Converters"
             xmlns:UI="using:Microsoft.Advertising.WinRT.UI"
             mc:Ignorable="d"
             d:DesignHeight="900"
             d:DesignWidth="400"
             DataContext="{Binding ActivityAddVM, Source={StaticResource VMLocator}}">

    <UserControl.Resources>
        <Convert:DateToDateTimeOffset x:Key="DateCheck"/>
        <Convert:InvertBoolConverter x:Key="InvertBool"/>
        <Convert:ErrorMessageConverter x:Key="ActivityAddErrorMessage"/>
        <Convert:BoolToVisibility x:Key="BoolToVisibility"/>
        <Convert:IdConverter x:Key="IdConverter"/> 
        <Convert:VisibilityToGridLength x:Key="AddMoreButtonVisibility"/>
        <TDNConvert:AddCloseVisibility x:Key="AddCloseVisibility"/>
        <Convert:DateTimeToTimeSpan x:Key="DateTimeToTimeSpan"/>
        <Convert:StringConcatConverter x:Key="ShortcutMaker"/>

        <Conv:ValueWhenConverter x:Key="NotifyEnabledConverter">
            <Conv:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </Conv:ValueWhenConverter.When>
            <Conv:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </Conv:ValueWhenConverter.Value>
            <Conv:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </Conv:ValueWhenConverter.Otherwise>
        </Conv:ValueWhenConverter>

        <!--<Conv:ValueWhenConverter x:Key="NotifyTimeVisibilityConverter">
            <Conv:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </Conv:ValueWhenConverter.When>
            <Conv:ValueWhenConverter.Value>
                <Visibility>Collapsed</Visibility>
            </Conv:ValueWhenConverter.Value>
            <Conv:ValueWhenConverter.Otherwise>
                <Visibility>Visible</Visibility>
            </Conv:ValueWhenConverter.Otherwise>
        </Conv:ValueWhenConverter>-->
        
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="{Binding ElementName=AddClose, Path=Visibility, Converter={StaticResource AddCloseVisibility}}"/>
        </Grid.RowDefinitions>

        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      VerticalScrollMode="Enabled"
                      Grid.Row="0">

            <RelativePanel>
                <TextBox x:Name="ActivityName"
                         Margin="10"
                         TextWrapping="Wrap" 
                         RelativePanel.AlignLeftWithPanel="True"
                         RelativePanel.AlignRightWithPanel="True"
                         Text="{Binding DetailItem.Name, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         PlaceholderText="Insert activity name"/>

                <TextBox x:Name="ActivityDescription"                        
                         Margin="10"                              
                         TextWrapping="Wrap" 
                         AcceptsReturn="True"
                         RelativePanel.Below="ActivityName"
                         RelativePanel.AlignLeftWithPanel="True"
                         RelativePanel.AlignRightWithPanel="True"
                         PlaceholderText="Insert activity description" 
                         Text="{Binding DetailItem.Description, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                         Height="150"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"/>

                <Grid x:Name="ActivityDateInput"
                      Margin="10"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="ActivityDescription">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0"
                               Grid.Column="0"
                               Text="Start"
                               VerticalAlignment="Center"
                               Margin="0,0,10,0"/>

                    <TextBlock Grid.Row="1"
                               Grid.Column="0"
                               Text="End"
                               VerticalAlignment="Center"
                               Margin="0,0,10,0"/>

                    <CalendarDatePicker x:Name="ActivityStart"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Date="{Binding DetailItem.Start, Converter={StaticResource DateCheck}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        Margin="5,5,0,5" 
                                        PlaceholderText="Select a date"/>
                                        <!--MaxDate="{Binding Date, ElementName=ActivityEnd, Mode=TwoWay}"-->

                    <CalendarDatePicker x:Name="ActivityEnd"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Date="{Binding DetailItem.End, Converter={StaticResource DateCheck}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                        HorizontalAlignment="Stretch"
                                        Margin="5,5,0,5" 
                                        PlaceholderText="Select a date"
                                        IsEnabled="{Binding IsChecked, Converter={StaticResource InvertBool}, ElementName=ActivityNeverending}"/>
                                        <!--MinDate="{Binding Date, ElementName=ActivityStart, Mode=TwoWay}"-->
                    
                </Grid>

                <Grid x:Name="ActivityCheckInput"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="ActivityDateInput"
                      Margin="10">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <CheckBox x:Name="ActivityNeverending"
                              Grid.Column="0"
                              IsChecked="{Binding DetailItem.Neverend, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                              Content="Neverending activity" />

                    <CheckBox x:Name="ActivityNotifyMe"
                              Grid.Column="1"    
                              IsChecked="{Binding DetailItem.Notify, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"                              
                              Content="Notify me"
                              HorizontalAlignment="Right"
                              IsEnabled="{Binding IsChecked, ElementName=ActivitySecure, Converter={StaticResource NotifyEnabledConverter}}"/>
                    
                </Grid>

                <Grid x:Name="ActivityTimeInput"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True"
                      RelativePanel.Below="ActivityCheckInput"
                      Margin="10"
                      Visibility="{Binding IsChecked, ElementName=ActivitySecure, Converter={StaticResource NotifyEnabledConverter}}">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="2*"/>
                    </Grid.ColumnDefinitions>

                    <TextBlock Grid.Column="0"
                               Text="When"
                               VerticalAlignment="Center"
                               Margin="0,0,10,0"/>

                    <TimePicker x:Name="ActivityWhenNotify"
                                Time="{Binding DetailItem.WhenNotify, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, Converter={StaticResource DateTimeToTimeSpan}}"
                                Grid.Column="1"
                                HorizontalAlignment="Stretch" 
                                IsEnabled="{Binding IsChecked, ElementName=ActivityNotifyMe}"/>
                </Grid>

                <Button x:Name="ActivityDateRepeat"
                        RelativePanel.AlignLeftWithPanel="True"
                        RelativePanel.AlignRightWithPanel="True"
                        RelativePanel.Below="ActivityTimeInput"
                        Margin="10"
                        Content="Select repeated days">

                    <Button.Flyout>
                        <Flyout x:Name="ParentFlyout">
                            <Flyout.FlyoutPresenterStyle>

                                <Style TargetType="FlyoutPresenter">

                                    <Setter Property="Background"
                                            Value="{ThemeResource AcrylicInAppSoft}"/>

                                    <Setter Property="ScrollViewer.HorizontalScrollMode" 
                                            Value="Disabled"/>

                                    <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" 
                                            Value="Disabled"/>

                                    <Setter Property="Padding"
                                            Value="0"/>

                                </Style>
                            </Flyout.FlyoutPresenterStyle>

                            <FControl:DaysControl x:Name="SelectedDays"
                                                 DataContext="{Binding DetailItem.NotifyDays, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                        </Flyout>
                    </Button.Flyout>
                </Button>

                <CheckBox x:Name="ActivitySecure"
                          Margin="10"
                          IsChecked="{Binding DetailItem.Secured, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                          Content="Secured activity"
                          RelativePanel.Below="ActivityDateRepeat"
                          Visibility="{Binding SecBtnVisibility}"/>

                <TextBlock x:Name="ActivitySecDesc" 
                           Text="By setting the activity as protected, you will not be able to set notification"
                           TextWrapping="WrapWholeWords"
                           Margin="10, 0, 10, 10"
                           Visibility="{Binding SecBtnVisibility}"
                           RelativePanel.Below="ActivitySecure"/>

                <TextBlock x:Name="ActivityInputError" 
                           Text="{Binding ErrorMessage, Converter={StaticResource ActivityAddErrorMessage}}"
                           Margin="10"
                           Foreground="Red"
                           Visibility="{Binding ErrorVisible, Converter={StaticResource BoolToVisibility}}"
                           RelativePanel.Below="ActivitySecDesc"/>

                <UI:AdControl ApplicationId="9nblggh69j83"
                              AdUnitId="1100012277"
                              HorizontalAlignment="Left"
                              Height="250"
                              VerticalAlignment="Top"
                              Width="300"
                              Margin="10"
                              Visibility="{Binding AdVisibility}"
                              RelativePanel.Below="ActivityInputError"/>
                
            </RelativePanel>
        </ScrollViewer>

        <Grid Grid.Row="1">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition x:Name="AddCloseRow"
                               Height="{Binding ElementName=AddClose, Path=Visibility, Converter={StaticResource AddMoreButtonVisibility}}"/>
                <RowDefinition />
            </Grid.RowDefinitions>

            <Button x:Name="AddClose" 
                    Grid.Row="0"
                    Grid.ColumnSpan="3"
                    Margin="0, 0, 0, 1"
                    FontSize="15"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Visibility="{Binding DetailItem.ID, Converter={StaticResource IdConverter}, ConverterParameter=visibility}"
                    Command="{Binding SaveActivityClose, UpdateSourceTrigger=PropertyChanged}"
                    CommandParameter="{Binding DetailItem}"
                    ToolTipService.ToolTip="Add and close (Ctrl + Shift + S)">

                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control,Shift"
                                         Key="S"/>
                </Button.KeyboardAccelerators>

                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="SaveLocal" Margin="0, 0, 10, 0"/>
                    <TextBlock>Add and close</TextBlock>
                </StackPanel>

            </Button>

            <Button x:Name="Add" 
                    Margin="0, 1, 1, 1"
                    Grid.Row="1"
                    FontSize="15"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    IsEnabled="True"
                    Command="{Binding SaveActivity, UpdateSourceTrigger=PropertyChanged}"
                    CommandParameter="{Binding DetailItem}"
                    ToolTipService.ToolTip="{Binding Path=Text, ElementName=AddText, Converter={StaticResource ShortcutMaker}, ConverterParameter=(Ctrl + S)}">

                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="Control"
                                         Key="S"/>
                </Button.KeyboardAccelerators>

                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="Save" Margin="0, 0, 10, 0"/>
                    <TextBlock x:Name="AddText"
                               Text="{Binding DetailItem.ID, Converter={StaticResource IdConverter}, ConverterParameter=text}"/>
                </StackPanel>
            </Button>

            <Button x:Name="Cancel"
                    Grid.Column="2"                            
                    Margin="1, 1, 0, 1"
                    Grid.Row="1"
                    FontSize="15"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    Command="{Binding Close, UpdateSourceTrigger=PropertyChanged}"
                    ToolTipService.ToolTip="Cancel (Esc)">

                <Button.KeyboardAccelerators>
                    <KeyboardAccelerator Modifiers="None"
                                         Key="Escape"/>
                </Button.KeyboardAccelerators>

                <StackPanel Orientation="Horizontal">
                    <SymbolIcon Symbol="Cancel" Margin="0, 0, 10, 0"/>
                    <TextBlock>Cancel</TextBlock>
                </StackPanel>
            </Button>
        </Grid>
    </Grid>
</UserControl>